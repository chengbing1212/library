
//引入说明文档
task:
 1.权限检测框架 (6.0 和 6.0 之前)
 2.截图框架 (系统和自带)
 3.bug检测框架(三方或自己)
 4.内存泄漏框架
 5.扩展各种ui框架
 6.图片压缩框架
 7.数据库框架(自己或三方)
 8.缓存
 9.im
 10.更新包


 另：整合目前的框架
 	 框架隔离，可以自由组合

 	 Rxjava 响应式编程
 	 插件热修复
 	 
 	 
 	 
 	 
 	 
 	 
[开源库或者本地library]
依赖：[如有依赖，标上依赖说明]
链接: [github 链接或者本地library]
配置: [配置文档]
使用: [使用说明]

//copy
    依赖：[无]
    链接:
    配置:

    使用: 详见github



RxBinding
    依赖：[无]
    链接: https://github.com/JakeWharton/RxBinding.git
    配置:

    buildscript {
        repositories {
            mavenCentral()
        }

        dependencies {
            classpath 'me.tatarka:gradle-retrolambda:3.2.3'
        }
    }

    // Required because retrolambda is on maven central
    repositories {
        mavenCentral()
    }


    apply plugin: 'com.android.application'
    apply plugin: 'me.tatarka.retrolambda'

    android {
       .....................

        compileOptions {
            sourceCompatibility 1.8
            targetCompatibility 1.8
        }
    }

    dependencies {
       ..............
        compile 'com.jakewharton.rxbinding:rxbinding:0.4.0'
    }


    使用: 详见github

RxPermissions
    依赖：RxBinding
    链接: https://github.com/tbruyelle/RxPermissions.git
    配置:

         dependencies {
          ............
           compile 'com.tbruyelle.rxpermissions:rxpermissions:0.7.0@aar'
         }

    使用: 详见github

 locationlibrary 百度定位
依赖：
链接：http://lbsyun.baidu.com/index.php?title=android-locsdk

配置：

dependencies {
   ......
    compile project(path: ':locationlibrary')

}
或 引用 locationlibrary-release.aar

使用：
1.初始化 BDLocationImpl.getInstance().init(this);
2.开始定位 BDLocationImpl.getInstance().star();
3.停止定位  BDLocationImpl.getInstance().stop();
详见github   LocationSampleFragment

